Add notification (NEWNEIGH) when fdb-entry (MAC) moves between switchports.
Not present until at least 3.14-rc1.

Update 2014-09-25: c65c7a306 introduced a sufficent change for this into
                   upstream kernel. It is in 3.17-rc6 and 3.16.3 but not
		   3.14.19 at least.

Patch: https://patchwork.kernel.org/patch/2444531/
Upstream has (does not work):
 https://github.com/torvalds/linux/commit/b0a397fb352e65e3b6501dca9662617a18862ef1 in v3.10-rc1
 (was: http://git.kernel.org/cgit/linux/kernel/git/next/linux-next.git/commit/net/bridge/br_fdb.c?id=b0a397fb352e65e3b6501dca9662617a18862ef1)

--- a/net/bridge/br_fdb.c	2013-04-15 11:21:51.638963668 +0200
+++ b/net/bridge/br_fdb.c	2013-04-15 11:23:55.941166319 +0200
@@ -453,6 +453,7 @@ void br_fdb_update(struct net_bridge *br
 {
 	struct hlist_head *head = &br->hash[br_mac_hash(addr, vid)];
 	struct net_bridge_fdb_entry *fdb;
+	struct net_bridge_port *origsrc;
 
	/* some users want to always flood. */
	if (hold_time(br) == 0)
@@ -516,8 +517,12 @@ void br_fdb_update(struct net_bridge *br
 					source->dev->name);
 		} else {
 			/* fastpath: update of existing entry */
+			origsrc = fdb->dst;
 			fdb->dst = source;
 			fdb->updated = jiffies;
+			/* notify applications of modified slave device */
+			if (origsrc != source)
+				fdb_notify(br, fdb, RTM_NEWNEIGH);
 		}
 	} else {
 		spin_lock(&br->hash_lock);
